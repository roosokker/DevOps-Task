name: Deploy to Amazon EKS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: "us-east-1"                  # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: "python-img"           # set this to your Amazon ECR repository name
  EKS_CLUSTER: "EKS-Cluster"                 # set this to your Amazon ECS cluster name                                         # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: "devops-task"           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Add new git version
      run: |
        chmod +x gitVersion
        ./gitVersion
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ git tag }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Kubectl setup
      id: kubectl-api
      run: |
        curl "https://d1uj6qtbmh3dt5.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        aws --version
        curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        mkdir -p $HOME/bin/kubectl
        cp ./kubectl $HOME/bin/kubectl
        export PATH=$PATH:$HOME/bin
        echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
        echo $(kubectl version --short --client)

    - name: Deploy Amazon EKS deployments
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ git tag }}
      run: |
        export REPOSITORY_URI=$ECR_REGISTRY/$ECR_REPOSITORY
        aws eks get-token --cluster-name EKS-Cluster --region us-east-1
        aws eks update-kubeconfig --name EKS-Cluster --region us-east-1
        kubectl config get-contexts
        kubectl config set-context my-context --cluster=EKS-Cluster
        kubectl apply -f service.yml
        envsubst < deployment.yml | kubectl apply -f -
        aws eks update-kubeconfig --name EKS-Cluster --region us-east-1
        
