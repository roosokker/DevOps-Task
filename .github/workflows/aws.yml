name: Deploy to Amazon EKS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: "us-east-1"            
  ECR_REPOSITORY: "python-img"         
  EKS_CLUSTER: "EKS-Cluster"
  CONTAINER_NAME: "devops-task"

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      env:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Setup Needed Packages
      run: |
        curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        mkdir -p $HOME/bin/kubectl
        cp ./kubectl $HOME/bin/kubectl
        export PATH=$PATH:$HOME/bin
        echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
        kubectl version --client
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        aws --version

    # - name: Get the current git tag
    #   id: git-tag
    #   run: echo "IMAGE_TAG=$(git describe --tags)" >> $GITHUB_ENV

    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   run : |
    #     AccountId=$(aws sts get-caller-identity --query Account --output text)
    #     aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AccountId.dkr.ecr.$AWS_REGION.amazonaws.com

    # # - name: Build, tag, and push image to Amazon ECR
    # #   id: build-image
    # #   env:
    # #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    # #     IMAGE_TAG: ${{ env.IMAGE_TAG }}
    # #   run: |
    # #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
    # #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    # #     echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    # # - name: Deploy Amazon EKS deployments
    # #   env:
    # #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    # #     IMAGE_TAG: ${{ env.IMAGE_TAG }}
    # #   run: |
    # #     aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}
    # #     kubectl config use-context ${{ env.EKS_CLUSTER }}
    # #     kubectl apply -f service.yml
    # #     envsubst < deployment.yml | kubectl apply -f -
